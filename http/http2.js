/* 
  HTTP/2更快、更稳定、更简单
    帧：
      HTTP/2通信的最小单位，每个帧都包含帧头，
      至少也会标识出当前帧所属的数据流
    传输过程中为二进制编码的形式，而不是纯文本的形式
    消息：
      与逻辑请求或者响应消息对应的 完整的的2一些列帧，称为消息。
    数据流：（http建立链接后，每个链接下可以有若干条数据流）
      已建立的连接内的双向字节流，可以承载一条/多条的消息
    看图 --- stream.jpg

    交错发送，接收方重组织：
      我们把一个请求拆成了若干个帧，这些帧不需要按照逻辑顺序
      可以并行或者交替的发送，帧里面都有一些标信息，
      接收方会根据标信息，重新的组织起来

    HTTP/2 接 TCP，TCP需要有建立连接的过程，但是对于一个目标的client
    不太想每次请求都去重新的建立链接，拉高消耗。HTTP/2建立的新特性：
      每个来源和目标地址，建立连接后，是可以被永久利用的（复用性）
    流控制：
      浏览器可以主动拒绝server给你发大量数据的请求
      （比如长的视频，我暂停了，浏览器知道暂时没有必要缓存完整的视频）
    服务器推送：
      client请求page.html。服务器检测到这个html引用了其他的css和js
      返回html的同时，把引用的文件push给client端（push promise）
      （这点视情况讨论，因为一般css和js都作为静态资源，不会放在同个服务器上）
*/